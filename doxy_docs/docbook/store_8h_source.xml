<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_store_8h_source" xml:lang="en-US">
<title>store.h</title>
<indexterm><primary>src/store.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_store_8h_source_1l00001"/>00001 
<anchor xml:id="_store_8h_source_1l00015"/>00015 <emphasis role="preprocessor">#ifndef&#32;_Store_h</emphasis>
<anchor xml:id="_store_8h_source_1l00016"/>00016 <emphasis role="preprocessor">#define&#32;_Store_h</emphasis>
<anchor xml:id="_store_8h_source_1l00017"/>00017 
<anchor xml:id="_store_8h_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&lt;Arduino.h&gt;</emphasis>
<anchor xml:id="_store_8h_source_1l00019"/>00019 
<anchor xml:id="_store_8h_source_1l00024"/><link linkend="_store_8h">00024</link> <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis>{
<anchor xml:id="_store_8h_source_1l00025"/><link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">00025</link> &#32;&#32;&#32;&#32;word&#32;<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00026"/><link linkend="_store_8h_1a91392f39b00b69c871dcfbd57095b643">00026</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_store_8h_1a91392f39b00b69c871dcfbd57095b643">slots</link>;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00027"/><link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">00027</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>;&#32;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00028"/>00028 }<link linkend="_store_8h_1structstorageBlock__T">storageBlock_T</link>;
<anchor xml:id="_store_8h_source_1l00029"/>00029 
<anchor xml:id="_store_8h_source_1l00038"/><link linkend="_classstorageBlock__C">00038</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classstorageBlock__C">storageBlock_C</link>&#32;{
<anchor xml:id="_store_8h_source_1l00039"/>00039 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_store_8h_source_1l00040"/><link linkend="_classstorageBlock__C_1a8534147de81cd1c257a0ec727440213c">00040</link> &#32;&#32;&#32;&#32;uint16_t&#32;<link linkend="_classstorageBlock__C_1a8534147de81cd1c257a0ec727440213c">nextStartAddr</link>;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00041"/><link linkend="_classstorageBlock__C_1ab6449bda89cd0dab792e60e5ee862939">00041</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1ab6449bda89cd0dab792e60e5ee862939">maxBlocks</link>;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00042"/><link linkend="_classstorageBlock__C_1af11fee6180446c962384ebe4c5d8eb11">00042</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1af11fee6180446c962384ebe4c5d8eb11">slotsUsed</link>&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00043"/>00043 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_store_8h_source_1l00044"/><link linkend="_classstorageBlock__C_1a9069a91d9228649e3d3f67b5f40e182a">00044</link> &#32;&#32;&#32;&#32;<link linkend="_store_8h_1structstorageBlock__T">storageBlock_T</link>*&#32;<link linkend="_classstorageBlock__C_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>;&#32;&#32;&#32;&#32;
<anchor xml:id="_store_8h_source_1l00045"/>00045 
<anchor xml:id="_store_8h_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="comment">//setup</emphasis>
<anchor xml:id="_store_8h_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<link linkend="_classstorageBlock__C_1a9020da58b3765ed6bd53da41c55b9eb7">storageBlock_C</link>(<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1ab6449bda89cd0dab792e60e5ee862939">maxBlocks</link>,&#32;<link linkend="_store_8h_1structstorageBlock__T">storageBlock_T</link>&#32;a[&#32;],&#32;<emphasis role="keywordtype">byte</emphasis>&#32;startIndex&#32;=&#32;0);
<anchor xml:id="_store_8h_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<link linkend="_classstorageBlock__C_1afe17040108c5d920b01d871585c150f8">~storageBlock_C</link>();
<anchor xml:id="_store_8h_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classstorageBlock__C_1a0f4aa42b1755c6439528a6a6f72043f8">leaveFirst</link>(<emphasis role="keywordtype">byte</emphasis>&#32;i);
<anchor xml:id="_store_8h_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1ac9ae09aee8e89280fd15dcae118a7783">addBlock</link>(<emphasis role="keywordtype">byte</emphasis>&#32;slots,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;recSize);
<anchor xml:id="_store_8h_source_1l00051"/>00051 
<anchor xml:id="_store_8h_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;block&#32;info.</emphasis>
<anchor xml:id="_store_8h_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1ab118a805d45d5b6208fbd31dface7e39">blockSize</link>(<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_store_8h_source_1l00054"/>00054 &#32;&#32;&#32;&#32;word&#32;<link linkend="_classstorageBlock__C_1ad1486b9a48a2b2c4cb3cf16827cbb7a1">blockStart</link>(<emphasis role="keywordtype">byte</emphasis>&#32;blockId);
<anchor xml:id="_store_8h_source_1l00055"/>00055 &#32;&#32;&#32;&#32;word&#32;<link linkend="_classstorageBlock__C_1a2467b7e6f601f96efc42a6c32a023522">blockEnd</link>(<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_store_8h_source_1l00056"/>00056 
<anchor xml:id="_store_8h_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Working&#32;with&#32;a&#32;slot&#32;in&#32;a&#32;block.</emphasis>
<anchor xml:id="_store_8h_source_1l00058"/><link linkend="_classstorageBlock__C_1acb749fa733b7000304b57fb659716497">00058</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1acb749fa733b7000304b57fb659716497">getSlots</link>(<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classstorageBlock__C_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[id].<link linkend="_store_8h_1a91392f39b00b69c871dcfbd57095b643">slots</link>;&#32;}
<anchor xml:id="_store_8h_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorageBlock__C_1aee7a456279f8d306be97defb37320c35">readByte</link>(<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;offset);
<anchor xml:id="_store_8h_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classstorageBlock__C_1a85ff9c2e220fa0a8e7c1d62f85a3cf39">readSlot</link>(<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r);
<anchor xml:id="_store_8h_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classstorageBlock__C_1abef785fcb0da67f1ca8dbf54cfc6491f">writeByte</link>(<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;offset,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value);
<anchor xml:id="_store_8h_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classstorageBlock__C_1a7e258c73d18c8939ab2fcab66fcf6a64">writeSlot</link>(<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r);
<anchor xml:id="_store_8h_source_1l00063"/>00063 
<anchor xml:id="_store_8h_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classstorageBlock__C_1a5689bada4bede0c81ab36fe2f06cc9f0">print</link>(<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>);
<anchor xml:id="_store_8h_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classstorageBlock__C_1a769366c10cb4f7a77f9098bca7be6256">printMemUsage</link>();
<anchor xml:id="_store_8h_source_1l00066"/>00066 };
<anchor xml:id="_store_8h_source_1l00073"/><link linkend="_classblockMem__C">00073</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classblockMem__C">blockMem_C</link>&#32;{
<anchor xml:id="_store_8h_source_1l00074"/>00074 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_store_8h_source_1l00075"/><link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">00075</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">id</link>;
<anchor xml:id="_store_8h_source_1l00076"/><link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">00076</link> &#32;&#32;&#32;&#32;<link linkend="_classstorageBlock__C">storageBlock_C</link>*&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>;
<anchor xml:id="_store_8h_source_1l00077"/><link linkend="_classblockMem__C_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2">00077</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2">blockStart</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1ad1486b9a48a2b2c4cb3cf16827cbb7a1">blockStart</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
<anchor xml:id="_store_8h_source_1l00078"/><link linkend="_classblockMem__C_1a60818204acd6616f5513548b18b49a98">00078</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1a60818204acd6616f5513548b18b49a98">blockEnd</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a2467b7e6f601f96efc42a6c32a023522">blockEnd</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
<anchor xml:id="_store_8h_source_1l00079"/>00079 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_store_8h_source_1l00080"/><link linkend="_classblockMem__C_1a0ca4c16b7ab37bdd713f9af4c39c9246">00080</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classblockMem__C_1a0ca4c16b7ab37bdd713f9af4c39c9246">setId</link>(<emphasis role="keywordtype">byte</emphasis>&#32;id1)&#32;{&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;id1;&#32;}
<anchor xml:id="_store_8h_source_1l00081"/><link linkend="_classblockMem__C_1a7d2f47edbc0961e8b84a9763d1b53429">00081</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1a7d2f47edbc0961e8b84a9763d1b53429">getId</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">id</link>;&#32;}
<anchor xml:id="_store_8h_source_1l00082"/><link linkend="_classblockMem__C_1aa8522e68abf7be7e054bcab0081c01e6">00082</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classblockMem__C_1aa8522e68abf7be7e054bcab0081c01e6">setMemManager</link>(<link linkend="_classstorageBlock__C">storageBlock_C</link>&amp;&#32;o)&#32;{&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>&#32;=&#32;&amp;o;&#32;}
<anchor xml:id="_store_8h_source_1l00083"/><link linkend="_classblockMem__C_1a6ac5c94d5e447ba91f9a92766651ffd4">00083</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1a6ac5c94d5e447ba91f9a92766651ffd4">blockSize</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1ab118a805d45d5b6208fbd31dface7e39">blockSize</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
<anchor xml:id="_store_8h_source_1l00084"/><link linkend="_classblockMem__C_1abad38b2746fc7a01c61c597877c2c6d5">00084</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1abad38b2746fc7a01c61c597877c2c6d5">slotSize</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[<link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">id</link>].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>;&#32;}
<anchor xml:id="_store_8h_source_1l00085"/><link linkend="_classblockMem__C_1a553a53a98f4ef6f9b6f1f7b69d366214">00085</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1a553a53a98f4ef6f9b6f1f7b69d366214">readByte</link>(<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;offset)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1aee7a456279f8d306be97defb37320c35">readByte</link>(<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;offset);&#32;}
<anchor xml:id="_store_8h_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classblockMem__C_1a22a8e8952d4df256c9ff7333824fc90f">readSlot</link>(<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r);
<anchor xml:id="_store_8h_source_1l00087"/><link linkend="_classblockMem__C_1a384e3788e132d1ba9fac1b8c93fab642">00087</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classblockMem__C_1a384e3788e132d1ba9fac1b8c93fab642">writeByte</link>(<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;offset,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1abef785fcb0da67f1ca8dbf54cfc6491f">writeByte</link>(<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;offset,&#32;value);&#32;}
<anchor xml:id="_store_8h_source_1l00088"/><link linkend="_classblockMem__C_1ae8b068f64f2b0dc1c74a278fd8f6b954">00088</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classblockMem__C_1ae8b068f64f2b0dc1c74a278fd8f6b954">writeSlot</link>(<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a7e258c73d18c8939ab2fcab66fcf6a64">writeSlot</link>(<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;r);&#32;}
<anchor xml:id="_store_8h_source_1l00089"/><link linkend="_classblockMem__C_1a9230be465ff59edbed66fe536b3df2be">00089</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classblockMem__C_1a9230be465ff59edbed66fe536b3df2be">print</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a5689bada4bede0c81ab36fe2f06cc9f0">print</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
<anchor xml:id="_store_8h_source_1l00090"/><link linkend="_classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab">00090</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab">getSlots</link>()&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1acb749fa733b7000304b57fb659716497">getSlots</link>(<emphasis role="keywordtype">id</emphasis>);;&#32;}
<anchor xml:id="_store_8h_source_1l00091"/>00091 };
<anchor xml:id="_store_8h_source_1l00092"/>00092 
<anchor xml:id="_store_8h_source_1l00093"/>00093 
<anchor xml:id="_store_8h_source_1l00094"/>00094 
<anchor xml:id="_store_8h_source_1l00095"/>00095 
<anchor xml:id="_store_8h_source_1l00096"/><link linkend="_store_8h_1a0eee8221fc0e018111a612d1c2a28523">00096</link> <emphasis role="preprocessor">#define&#32;sBlocks(S)&#32;static&#32;storageBlock_T&#32;storageBlocksA[S];&#32;maxStorageBlocks&#32;=&#32;S;</emphasis>
<anchor xml:id="_store_8h_source_1l00097"/>00097 
<anchor xml:id="_store_8h_source_1l00098"/>00098 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
