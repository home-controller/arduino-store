<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classblockMem__C" xml:lang="en-US">
<title>blockMem_C Class Reference</title>
<indexterm><primary>blockMem_C</primary></indexterm>
<para>

<para>Wrapper for <link linkend="_classstorageBlock__C">storageBlock_C</link> but working with only 1 block id(eg all the 1wire chips saved info). </para>
 
</para>
<para>
<computeroutput>#include &lt;store.h&gt;</computeroutput>
</para>
Collaboration diagram for blockMem_C:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C__coll__graph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_classblockMem__C_1a0ca4c16b7ab37bdd713f9af4c39c9246">setId</link> (byte id1)</para>
</listitem>
            <listitem><para>byte <link linkend="_classblockMem__C_1a7d2f47edbc0961e8b84a9763d1b53429">getId</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_classblockMem__C_1aa8522e68abf7be7e054bcab0081c01e6">setMemManager</link> (<link linkend="_classstorageBlock__C">storageBlock_C</link> &amp;o)</para>
</listitem>
            <listitem><para>byte <link linkend="_classblockMem__C_1a6ac5c94d5e447ba91f9a92766651ffd4">blockSize</link> ()</para>
</listitem>
            <listitem><para>byte <link linkend="_classblockMem__C_1abad38b2746fc7a01c61c597877c2c6d5">slotSize</link> ()</para>

<para>mem for block = number of slots * slot size. </para>
</listitem>
            <listitem><para>byte <link linkend="_classblockMem__C_1a553a53a98f4ef6f9b6f1f7b69d366214">readByte</link> (byte slot, byte offset)</para>
</listitem>
            <listitem><para>bool <link linkend="_classblockMem__C_1a22a8e8952d4df256c9ff7333824fc90f">readSlot</link> (byte slot, void *r)</para>

<para>Read a slot of data from storage. e.g. eeprom, flash, SDcard(only eeprom for now) </para>
</listitem>
            <listitem><para>bool <link linkend="_classblockMem__C_1a384e3788e132d1ba9fac1b8c93fab642">writeByte</link> (byte slot, byte offset, byte value)</para>
</listitem>
            <listitem><para>bool <link linkend="_classblockMem__C_1ae8b068f64f2b0dc1c74a278fd8f6b954">writeSlot</link> (byte slot, void *r)</para>
</listitem>
            <listitem><para>void <link linkend="_classblockMem__C_1a9230be465ff59edbed66fe536b3df2be">print</link> ()</para>
</listitem>
            <listitem><para>byte <link linkend="_classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab">getSlots</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Member Functions    </title>
        <itemizedlist>
            <listitem><para>byte <link linkend="_classblockMem__C_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2">blockStart</link> ()</para>
</listitem>
            <listitem><para>byte <link linkend="_classblockMem__C_1a60818204acd6616f5513548b18b49a98">blockEnd</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>byte <link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">id</link></para>
</listitem>
            <listitem><para><link linkend="_classstorageBlock__C">storageBlock_C</link> * <link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Wrapper for <link linkend="_classstorageBlock__C">storageBlock_C</link> but working with only 1 block id(eg all the 1wire chips saved info). </para>



<para>This works with a block of storage consisting of <link linkend="_classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab">getSlots()</link> slots all of the same size. e.g if we need to store 15 arrays of bytes each 7 bytes long. i.e. Equivelent to: byte arrayOfType[<link linkend="_classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab">getSlots()</link>=15][7]; </para>
<para>
Definition at line <link linkend="_store_8h_source_1l00073">73</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classblockMem__C_1a60818204acd6616f5513548b18b49a98"/><section>
    <title>blockEnd()</title>
<indexterm><primary>blockEnd</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>blockEnd</secondary></indexterm>
<para><computeroutput>byte blockMem_C::blockEnd ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00078">78</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00078 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a2467b7e6f601f96efc42a6c32a023522">blockEnd</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
</programlisting><para>
References <link linkend="_store_8cpp_source_1l00048">storageBlock_C::blockEnd()</link>, and <link linkend="_store_8h_source_1l00076">memManager</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_a60818204acd6616f5513548b18b49a98_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1a6ac5c94d5e447ba91f9a92766651ffd4"/><section>
    <title>blockSize()</title>
<indexterm><primary>blockSize</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>blockSize</secondary></indexterm>
<para><computeroutput>byte blockMem_C::blockSize ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00083">83</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00083 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1ab118a805d45d5b6208fbd31dface7e39">blockSize</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
</programlisting><para>
References <link linkend="_store_8cpp_source_1l00037">storageBlock_C::blockSize()</link>, and <link linkend="_store_8h_source_1l00076">memManager</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_a6ac5c94d5e447ba91f9a92766651ffd4_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2"/><section>
    <title>blockStart()</title>
<indexterm><primary>blockStart</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>blockStart</secondary></indexterm>
<para><computeroutput>byte blockMem_C::blockStart ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00077">77</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00077 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1ad1486b9a48a2b2c4cb3cf16827cbb7a1">blockStart</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
</programlisting><para>
References <link linkend="_store_8cpp_source_1l00122">storageBlock_C::blockStart()</link>, and <link linkend="_store_8h_source_1l00076">memManager</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_ae2966e00bdc0b6ac8b5e7fb9eefd0cf2_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1a7d2f47edbc0961e8b84a9763d1b53429"/><section>
    <title>getId()</title>
<indexterm><primary>getId</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>getId</secondary></indexterm>
<para><computeroutput>byte blockMem_C::getId ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00081">81</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00081 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">id</link>;&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00075">id</link>.</para>
</section>
<anchor xml:id="_classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab"/><section>
    <title>getSlots()</title>
<indexterm><primary>getSlots</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>getSlots</secondary></indexterm>
<para><computeroutput>byte blockMem_C::getSlots ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00090">90</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00090 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1acb749fa733b7000304b57fb659716497">getSlots</link>(<emphasis role="keywordtype">id</emphasis>);;&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00058">storageBlock_C::getSlots()</link>, and <link linkend="_store_8h_source_1l00076">memManager</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_ab00c3bdc52c49a26f8b6931f9af058ab_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1a9230be465ff59edbed66fe536b3df2be"/><section>
    <title>print()</title>
<indexterm><primary>print</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>print</secondary></indexterm>
<para><computeroutput>void blockMem_C::print ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00089">89</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00089 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a5689bada4bede0c81ab36fe2f06cc9f0">print</link>(<emphasis role="keywordtype">id</emphasis>);&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00076">memManager</link>, and <link linkend="_store_8cpp_source_1l00070">storageBlock_C::print()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_a9230be465ff59edbed66fe536b3df2be_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1a553a53a98f4ef6f9b6f1f7b69d366214"/><section>
    <title>readByte()</title>
<indexterm><primary>readByte</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>readByte</secondary></indexterm>
<para><computeroutput>byte blockMem_C::readByte (byte slot, byte offset)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00085">85</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00085 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1aee7a456279f8d306be97defb37320c35">readByte</link>(<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;offset);&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00076">memManager</link>, and <link linkend="_store_8cpp_source_1l00134">storageBlock_C::readByte()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_a553a53a98f4ef6f9b6f1f7b69d366214_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1a22a8e8952d4df256c9ff7333824fc90f"/><section>
    <title>readSlot()</title>
<indexterm><primary>readSlot</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>readSlot</secondary></indexterm>
<para><computeroutput>bool blockMem_C::readSlot (byte slot, void * r)</computeroutput></para><para>

<para>Read a slot of data from storage. e.g. eeprom, flash, SDcard(only eeprom for now) </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="3" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>in</entry><entry>slot</entry><entry>
<para>The slot to read. 0 for first slot. </para>
</entry>
                            </row>
                            <row>
<entry>out</entry><entry>r</entry><entry>
<para>pointer to the memory to copy the slot into. As not using templates need to make sure sizeof(var pointed to by r) &gt;= slot size.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>true true if no problems </para>

<para>false </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_store_8cpp_source_1l00216">216</link> of file <link linkend="_store_8cpp_source">store.cpp</link>.</para>
<programlisting linenumbering="unnumbered">00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00217 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;sizeof(memManager):&quot;&#32;);&#32;io_print_n(&#32;sizeof(&#32;memManager&#32;)&#32;);</emphasis>
00218 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;memManager:&quot;&#32;);&#32;io_print_n(&#32;(&#32;word&#32;)(&#32;&amp;(&#32;*memManager&#32;)&#32;)&#32;);</emphasis>
00219 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a85ff9c2e220fa0a8e7c1d62f85a3cf39">readSlot</link>(&#32;<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;r&#32;);
00220 }
</programlisting><para>
References <link linkend="_store_8h_source_1l00076">memManager</link>, and <link linkend="_store_8cpp_source_1l00152">storageBlock_C::readSlot()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_a22a8e8952d4df256c9ff7333824fc90f_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1a0ca4c16b7ab37bdd713f9af4c39c9246"/><section>
    <title>setId()</title>
<indexterm><primary>setId</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>setId</secondary></indexterm>
<para><computeroutput>void blockMem_C::setId (byte id1)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00080">80</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00080 {&#32;<emphasis role="keywordtype">id</emphasis>&#32;=&#32;id1;&#32;}
</programlisting></section>
<anchor xml:id="_classblockMem__C_1aa8522e68abf7be7e054bcab0081c01e6"/><section>
    <title>setMemManager()</title>
<indexterm><primary>setMemManager</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>setMemManager</secondary></indexterm>
<para><computeroutput>void blockMem_C::setMemManager (<link linkend="_classstorageBlock__C">storageBlock_C</link> &amp; o)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00082">82</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00082 {&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>&#32;=&#32;&amp;o;&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00076">memManager</link>.</para>
</section>
<anchor xml:id="_classblockMem__C_1abad38b2746fc7a01c61c597877c2c6d5"/><section>
    <title>slotSize()</title>
<indexterm><primary>slotSize</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>slotSize</secondary></indexterm>
<para><computeroutput>byte blockMem_C::slotSize ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>mem for block = number of slots * slot size. </para>
</para>
<para>
Definition at line <link linkend="_store_8h_source_1l00084">84</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00084 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[<link linkend="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b">id</link>].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>;&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00044">storageBlock_C::blocksA</link>, <link linkend="_store_8h_source_1l00075">id</link>, <link linkend="_store_8h_source_1l00076">memManager</link>, and <link linkend="_store_8h_source_1l00027">storageBlock_T::size</link>.</para>
</section>
<anchor xml:id="_classblockMem__C_1a384e3788e132d1ba9fac1b8c93fab642"/><section>
    <title>writeByte()</title>
<indexterm><primary>writeByte</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>writeByte</secondary></indexterm>
<para><computeroutput>bool blockMem_C::writeByte (byte slot, byte offset, byte value)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00087">87</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00087 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1abef785fcb0da67f1ca8dbf54cfc6491f">writeByte</link>(<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;offset,&#32;value);&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00076">memManager</link>, and <link linkend="_store_8cpp_source_1l00196">storageBlock_C::writeByte()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_a384e3788e132d1ba9fac1b8c93fab642_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_classblockMem__C_1ae8b068f64f2b0dc1c74a278fd8f6b954"/><section>
    <title>writeSlot()</title>
<indexterm><primary>writeSlot</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>writeSlot</secondary></indexterm>
<para><computeroutput>bool blockMem_C::writeSlot (byte slot, void * r)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00088">88</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<programlisting linenumbering="unnumbered">00088 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorageBlock__C_1a7e258c73d18c8939ab2fcab66fcf6a64">writeSlot</link>(<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;r);&#32;}
</programlisting><para>
References <link linkend="_store_8h_source_1l00076">memManager</link>, and <link linkend="_store_8cpp_source_1l00185">storageBlock_C::writeSlot()</link>.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classblockMem__C_ae8b068f64f2b0dc1c74a278fd8f6b954_cgraph.svg"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b"/><section>
    <title>id</title>
<indexterm><primary>id</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>id</secondary></indexterm>
<para><computeroutput>byte blockMem_C::id<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00075">75</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<para>
Referenced by <link linkend="_store_8h_source_1l00081">getId()</link>, and <link linkend="_store_8h_source_1l00084">slotSize()</link>.</para>
</section>
<anchor xml:id="_classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329"/><section>
    <title>memManager</title>
<indexterm><primary>memManager</primary><secondary>blockMem_C</secondary></indexterm>
<indexterm><primary>blockMem_C</primary><secondary>memManager</secondary></indexterm>
<para><computeroutput><link linkend="_classstorageBlock__C">storageBlock_C</link>* blockMem_C::memManager<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_store_8h_source_1l00076">76</link> of file <link linkend="_store_8h_source">store.h</link>.</para>
<para>
Referenced by <link linkend="_store_8h_source_1l00078">blockEnd()</link>, <link linkend="_store_8h_source_1l00083">blockSize()</link>, <link linkend="_store_8h_source_1l00077">blockStart()</link>, <link linkend="_store_8h_source_1l00090">getSlots()</link>, <link linkend="_store_8h_source_1l00089">print()</link>, <link linkend="_store_8h_source_1l00085">readByte()</link>, <link linkend="_store_8cpp_source_1l00216">readSlot()</link>, <link linkend="_store_8h_source_1l00082">setMemManager()</link>, <link linkend="_store_8h_source_1l00084">slotSize()</link>, <link linkend="_store_8h_source_1l00087">writeByte()</link>, and <link linkend="_store_8h_source_1l00088">writeSlot()</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
src/<link linkend="_store_8h">store.h</link>src/<link linkend="_store_8cpp">store.cpp</link></section>
</section>
