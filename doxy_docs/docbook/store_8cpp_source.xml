<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_store_8cpp_source" xml:lang="en-US">
<title>store.cpp</title>
<indexterm><primary>src/store.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_store_8cpp_source_1l00001"/>00001 
<anchor xml:id="_store_8cpp_source_1l00011"/>00011 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_store_8h">store.h</link>&quot;</emphasis>
<anchor xml:id="_store_8cpp_source_1l00012"/>00012 <emphasis role="preprocessor">#include&#32;&quot;/home/jmnc2/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src/EEPROM.h&quot;</emphasis>
<anchor xml:id="_store_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&lt;ui_io.h&gt;</emphasis>
<anchor xml:id="_store_8cpp_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;/home/jmnc2/doc/src/Arduino/libraries/defs/src/defs.h&quot;</emphasis>
<anchor xml:id="_store_8cpp_source_1l00015"/>00015 
<anchor xml:id="_store_8cpp_source_1l00016"/>00016 
<anchor xml:id="_store_8cpp_source_1l00017"/><link linkend="_classstorage_block___c_1a9020da58b3765ed6bd53da41c55b9eb7">00017</link> <link linkend="_classstorage_block___c_1a9020da58b3765ed6bd53da41c55b9eb7">storageBlock_C::storageBlock_C</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;maxBlocks,&#32;<link linkend="_store_8h_1structstorage_block___t">storageBlock_T</link>&#32;a[&#32;],&#32;<emphasis role="keywordtype">byte</emphasis>&#32;startIndex&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>&#32;=&#32;a;
<anchor xml:id="_store_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1ab6449bda89cd0dab792e60e5ee862939">maxBlocks</link>&#32;=&#32;<link linkend="_classstorage_block___c_1ab6449bda89cd0dab792e60e5ee862939">maxBlocks</link>;
<anchor xml:id="_store_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;=&#32;startIndex;
<anchor xml:id="_store_8cpp_source_1l00021"/>00021 }
<anchor xml:id="_store_8cpp_source_1l00022"/><link linkend="_classstorage_block___c_1afe17040108c5d920b01d871585c150f8">00022</link> <link linkend="_classstorage_block___c_1afe17040108c5d920b01d871585c150f8">storageBlock_C::~storageBlock_C</link>()&#32;{&#32;}
<anchor xml:id="_store_8cpp_source_1l00023"/>00023 
<anchor xml:id="_store_8cpp_source_1l00030"/><link linkend="_classstorage_block___c_1ab118a805d45d5b6208fbd31dface7e39">00030</link> <emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorage_block___c_1ab118a805d45d5b6208fbd31dface7e39">storageBlock_C::blockSize</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;id&#32;].<link linkend="_store_8h_1a91392f39b00b69c871dcfbd57095b643">slots</link>&#32;*&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;id&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>;&#32;<emphasis role="comment">//mem&#32;for&#32;block&#32;=&#32;number&#32;of&#32;slots&#32;*&#32;slot&#32;size.</emphasis>
<anchor xml:id="_store_8cpp_source_1l00032"/>00032 }
<anchor xml:id="_store_8cpp_source_1l00033"/>00033 
<anchor xml:id="_store_8cpp_source_1l00041"/><link linkend="_classstorage_block___c_1a2467b7e6f601f96efc42a6c32a023522">00041</link> word&#32;<link linkend="_classstorage_block___c_1a2467b7e6f601f96efc42a6c32a023522">storageBlock_C::blockEnd</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;id&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>&#32;+&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;id&#32;].<link linkend="_store_8h_1a91392f39b00b69c871dcfbd57095b643">slots</link>&#32;*&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;id&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>&#32;-&#32;1;
<anchor xml:id="_store_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="comment">//mem&#32;for&#32;block&#32;=&#32;number&#32;of&#32;slots&#32;*&#32;slot&#32;size.&#32;</emphasis>
<anchor xml:id="_store_8cpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="comment">//mem&#32;used&#32;before&#32;block&#32;=&#32;blocksA[&#32;id&#32;].start&#32;-&#32;1.</emphasis>
<anchor xml:id="_store_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;so:&#32;i&#32;=&#32;(blocksA[&#32;id&#32;].start&#32;-&#32;1)&#32;+&#32;blocksA[&#32;id&#32;].slots&#32;*&#32;blocksA[&#32;id&#32;].size</emphasis>
<anchor xml:id="_store_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;but&#32;as&#32;start&#32;could&#32;be&#32;0&#32;so&#32;sub&#32;1&#32;at&#32;end.</emphasis>
<anchor xml:id="_store_8cpp_source_1l00047"/>00047 }
<anchor xml:id="_store_8cpp_source_1l00048"/>00048 
<anchor xml:id="_store_8cpp_source_1l00049"/><link linkend="_classstorage_block___c_1a0f4aa42b1755c6439528a6a6f72043f8">00049</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classstorage_block___c_1a0f4aa42b1755c6439528a6a6f72043f8">storageBlock_C::leaveFirst</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;i&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;=&#32;i;
<anchor xml:id="_store_8cpp_source_1l00051"/>00051 };
<anchor xml:id="_store_8cpp_source_1l00052"/>00052 
<anchor xml:id="_store_8cpp_source_1l00053"/><link linkend="_classstorage_block___c_1a5689bada4bede0c81ab36fe2f06cc9f0">00053</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classstorage_block___c_1a5689bada4bede0c81ab36fe2f06cc9f0">storageBlock_C::print</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;&#32;storage&#32;id:&#32;&quot;</emphasis>&#32;);&#32;io_print_n(&#32;<emphasis role="keywordtype">id</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;,&#32;start&#32;address:&#32;&quot;</emphasis>&#32;);&#32;io_print_n(&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;<emphasis role="keywordtype">id</emphasis>&#32;].start&#32;);
<anchor xml:id="_store_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;,&#32;end&#32;addr:&#32;&quot;</emphasis>&#32;);&#32;io_print_n(&#32;<link linkend="_classstorage_block___c_1a2467b7e6f601f96efc42a6c32a023522">blockEnd</link>(&#32;<emphasis role="keywordtype">id</emphasis>&#32;)&#32;);
<anchor xml:id="_store_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;,&#32;bytes&#32;used:&#32;&quot;</emphasis>&#32;);&#32;io_print_n(&#32;<link linkend="_classstorage_block___c_1ab118a805d45d5b6208fbd31dface7e39">blockSize</link>(&#32;<emphasis role="keywordtype">id</emphasis>&#32;)&#32;);
<anchor xml:id="_store_8cpp_source_1l00058"/>00058 }
<anchor xml:id="_store_8cpp_source_1l00059"/>00059 
<anchor xml:id="_store_8cpp_source_1l00060"/><link linkend="_classstorage_block___c_1a769366c10cb4f7a77f9098bca7be6256">00060</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classstorage_block___c_1a769366c10cb4f7a77f9098bca7be6256">storageBlock_C::printMemUsage</link>()&#32;{
<anchor xml:id="_store_8cpp_source_1l00061"/>00061 <emphasis role="preprocessor">#ifdef&#32;ATmega328P</emphasis>
<anchor xml:id="_store_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;io_println(&#32;<emphasis role="stringliteral">&quot;MCU&#32;=&#32;ATmega328P&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00063"/>00063 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="_store_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;io_println(&#32;<emphasis role="stringliteral">&quot;ATmega328P&#32;has&#32;1kByte&#32;EEPROM,&#32;ATmega1280&#32;and&#32;ATmega2560&#32;4KB&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;io_println(&#32;&quot;EEPROM&#32;use:&quot;&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;Storage&#32;used:\n\r\tFor&#32;vars:&#32;&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;io_print_n(&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;0&#32;].start&#32;);
<anchor xml:id="_store_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;bytes,&#32;For&#32;switch&#32;sender&#32;=&#32;&quot;&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_println_n(&#32;resMemForSwitchCon&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;bytes,\n\r\tFor&#32;Blocks:&#32;&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;io_println_n(&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;-&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;0&#32;].start&#32;);
<anchor xml:id="_store_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;\tTotal&#32;EEPROM&#32;memory&#32;used&#32;in&#32;bytes&#32;=&#32;&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;io_print_n(&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;);
<anchor xml:id="_store_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;bytes,&#32;EEPROM&#32;memory&#32;left&#32;bytes&#32;=&#32;&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00075"/>00075 &#32;&#32;&#32;&#32;io_print_n(&#32;(&#32;mem_eeprom&#32;-&#32;(&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;)&#32;)&#32;);
<anchor xml:id="_store_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;io_print(&#32;<emphasis role="stringliteral">&quot;bytes,&#32;percentage&#32;left&#32;\u2248&#32;&quot;</emphasis>&#32;);<emphasis role="comment">//using&#32;this&#32;≈&#32;works&#32;to</emphasis>
<anchor xml:id="_store_8cpp_source_1l00077"/>00077 &#32;&#32;&#32;&#32;io_print_n(&#32;(&#32;(&#32;mem_eeprom&#32;-&#32;(&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;)&#32;)&#32;*&#32;100ul&#32;)&#32;/&#32;mem_eeprom&#32;);&#32;io_println(&#32;<emphasis role="stringliteral">&quot;%&quot;</emphasis>&#32;);
<anchor xml:id="_store_8cpp_source_1l00078"/>00078 
<anchor xml:id="_store_8cpp_source_1l00079"/>00079 }
<anchor xml:id="_store_8cpp_source_1l00080"/>00080 
<anchor xml:id="_store_8cpp_source_1l00090"/><link linkend="_classstorage_block___c_1ac9ae09aee8e89280fd15dcae118a7783">00090</link> <emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorage_block___c_1ac9ae09aee8e89280fd15dcae118a7783">storageBlock_C::addBlock</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slots,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;recSize&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;<link linkend="_classstorage_block___c_1af11fee6180446c962384ebe4c5d8eb11">slotsUsed</link>&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>&#32;=&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>;
<anchor xml:id="_store_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;<link linkend="_classstorage_block___c_1af11fee6180446c962384ebe4c5d8eb11">slotsUsed</link>&#32;].<link linkend="_store_8h_1a91392f39b00b69c871dcfbd57095b643">slots</link>&#32;=&#32;slots;
<anchor xml:id="_store_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;<link linkend="_classstorage_block___c_1af11fee6180446c962384ebe4c5d8eb11">slotsUsed</link>&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>&#32;=&#32;recSize;
<anchor xml:id="_store_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1af667e7f1303943fe187acf5615fa0ee2">eeprom_used</link>&#32;+=&#32;slots&#32;*&#32;recSize;
<anchor xml:id="_store_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<link linkend="_classstorage_block___c_1af11fee6180446c962384ebe4c5d8eb11">slotsUsed</link>++;
<anchor xml:id="_store_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classstorage_block___c_1af11fee6180446c962384ebe4c5d8eb11">slotsUsed</link>&#32;-&#32;1;
<anchor xml:id="_store_8cpp_source_1l00097"/>00097 };
<anchor xml:id="_store_8cpp_source_1l00098"/>00098 
<anchor xml:id="_store_8cpp_source_1l00099"/><link linkend="_classstorage_block___c_1ad1486b9a48a2b2c4cb3cf16827cbb7a1">00099</link> word&#32;<link linkend="_classstorage_block___c_1ad1486b9a48a2b2c4cb3cf16827cbb7a1">storageBlock_C::blockStart</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;blockId&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>;
<anchor xml:id="_store_8cpp_source_1l00101"/>00101 }
<anchor xml:id="_store_8cpp_source_1l00102"/>00102 
<anchor xml:id="_store_8cpp_source_1l00103"/><link linkend="_classstorage_block___c_1aee7a456279f8d306be97defb37320c35">00103</link> <emphasis role="keywordtype">byte</emphasis>&#32;<link linkend="_classstorage_block___c_1aee7a456279f8d306be97defb37320c35">storageBlock_C::readByte</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;offset&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00104"/>00104 &#32;&#32;&#32;&#32;word&#32;i;
<anchor xml:id="_store_8cpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;i&#32;=&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>&#32;+&#32;(&#32;slot&#32;*&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>&#32;);
<anchor xml:id="_store_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;EEPROM.read(&#32;i&#32;);
<anchor xml:id="_store_8cpp_source_1l00107"/>00107 
<anchor xml:id="_store_8cpp_source_1l00108"/>00108 }
<anchor xml:id="_store_8cpp_source_1l00109"/>00109 
<anchor xml:id="_store_8cpp_source_1l00110"/>00110 <emphasis role="comment">//&#32;void&#32;*memcpy(void&#32;*dst,&#32;const&#32;void&#32;*src,&#32;size_t&#32;len)</emphasis>
<anchor xml:id="_store_8cpp_source_1l00111"/>00111 
<anchor xml:id="_store_8cpp_source_1l00121"/><link linkend="_classstorage_block___c_1a85ff9c2e220fa0a8e7c1d62f85a3cf39">00121</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classstorage_block___c_1a85ff9c2e220fa0a8e7c1d62f85a3cf39">storageBlock_C::readSlot</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;word&#32;i,&#32;x;
<anchor xml:id="_store_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;id:&#32;&quot;&#32;);&#32;io_print_n(&#32;blockId&#32;);//&#32;checked&#32;to&#32;=&#32;1&#32;for&#32;1-wire.</emphasis>
<anchor xml:id="_store_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;slot:&#32;&quot;&#32;);&#32;io_print_n(&#32;slot&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;&amp;blocksA:&quot;&#32;);&#32;io_print_n(&#32;(&#32;word&#32;)&amp;blocksA&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;&amp;this:&quot;&#32;);&#32;io_print_n(&#32;(&#32;word&#32;)this&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00127"/>00127 
<anchor xml:id="_store_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;.slots:&#32;&quot;&#32;);&#32;io_print_n(&#32;blocksA[&#32;blockId&#32;].slots&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;sizeof(r):&quot;);io_print_n(&#32;sizeof(r)&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;r:&quot;);io_print_n(&#32;(word)r&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;(&#32;byte*&#32;)r:&quot;);&#32;io_print_n(&#32;(word)((&#32;byte*&#32;)r)&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00132"/>00132 
<anchor xml:id="_store_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;slot&#32;&gt;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].slots&#32;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}
<anchor xml:id="_store_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;i&#32;=&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>&#32;+&#32;(&#32;slot&#32;*&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>&#32;);
<anchor xml:id="_store_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;i(EEPROM&#32;addr):&#32;&quot;&#32;);&#32;io_print_n(&#32;i&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>*&#32;d&#32;=&#32;(&#32;<emphasis role="keywordtype">byte</emphasis>*&#32;)r;
<anchor xml:id="_store_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;d:&quot;);io_print_n(&#32;(word)d&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>;&#32;x++&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;d[&#32;x&#32;]&#32;=&#32;EEPROM.read(&#32;i&#32;+&#32;x&#32;);
<anchor xml:id="_store_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;.&quot;&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;}
<anchor xml:id="_store_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_store_8cpp_source_1l00143"/>00143 }
<anchor xml:id="_store_8cpp_source_1l00144"/>00144 
<anchor xml:id="_store_8cpp_source_1l00154"/><link linkend="_classstorage_block___c_1a7e258c73d18c8939ab2fcab66fcf6a64">00154</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classstorage_block___c_1a7e258c73d18c8939ab2fcab66fcf6a64">storageBlock_C::writeSlot</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00155"/>00155 &#32;&#32;&#32;&#32;word&#32;i,&#32;x;
<anchor xml:id="_store_8cpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;slot&#32;&gt;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].slots&#32;)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;&#32;}
<anchor xml:id="_store_8cpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;i&#32;=&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>&#32;+&#32;(&#32;slot&#32;*&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>&#32;);
<anchor xml:id="_store_8cpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">byte</emphasis>*&#32;d&#32;=&#32;(&#32;<emphasis role="keywordtype">byte</emphasis>*&#32;)r;
<anchor xml:id="_store_8cpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;x&#32;=&#32;0;&#32;x&#32;&lt;&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>;&#32;x++&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;EEPROM.update(&#32;i&#32;+&#32;x,&#32;d[&#32;x&#32;]&#32;);
<anchor xml:id="_store_8cpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;}
<anchor xml:id="_store_8cpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_store_8cpp_source_1l00163"/>00163 }
<anchor xml:id="_store_8cpp_source_1l00164"/>00164 
<anchor xml:id="_store_8cpp_source_1l00165"/><link linkend="_classstorage_block___c_1abef785fcb0da67f1ca8dbf54cfc6491f">00165</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classstorage_block___c_1abef785fcb0da67f1ca8dbf54cfc6491f">storageBlock_C::writeByte</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;blockId,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;offset,&#32;<emphasis role="keywordtype">byte</emphasis>&#32;value&#32;){
<anchor xml:id="_store_8cpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;word&#32;i;
<anchor xml:id="_store_8cpp_source_1l00167"/>00167 &#32;&#32;&#32;&#32;&#32;i&#32;=&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a140e81ed333b945f2430230e7da23f45">start</link>&#32;+&#32;(&#32;slot&#32;*&#32;<link linkend="_classstorage_block___c_1a9069a91d9228649e3d3f67b5f40e182a">blocksA</link>[&#32;blockId&#32;].<link linkend="_store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc">size</link>&#32;)&#32;+&#32;offset;
<anchor xml:id="_store_8cpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;EEPROM.update(&#32;i,&#32;&#32;value);
<anchor xml:id="_store_8cpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_store_8cpp_source_1l00170"/>00170 }
<anchor xml:id="_store_8cpp_source_1l00171"/>00171 
<anchor xml:id="_store_8cpp_source_1l00172"/>00172 <emphasis role="comment">//+++++++++++++++++++++++++++++++++++++++++++++++++++&#32;class&#32;blockMem_C+++++++===================</emphasis>
<anchor xml:id="_store_8cpp_source_1l00173"/>00173 
<anchor xml:id="_store_8cpp_source_1l00183"/><link linkend="_classblock_mem___c_1a22a8e8952d4df256c9ff7333824fc90f">00183</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classblock_mem___c_1a22a8e8952d4df256c9ff7333824fc90f">blockMem_C::readSlot</link>(&#32;<emphasis role="keywordtype">byte</emphasis>&#32;slot,&#32;<emphasis role="keywordtype">void</emphasis>*&#32;r&#32;)&#32;{
<anchor xml:id="_store_8cpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;sizeof(memManager):&quot;&#32;);&#32;io_print_n(&#32;sizeof(&#32;memManager&#32;)&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;<emphasis role="comment">//io_print(&#32;&quot;,&#32;memManager:&quot;&#32;);&#32;io_print_n(&#32;(&#32;word&#32;)(&#32;&amp;(&#32;*memManager&#32;)&#32;)&#32;);</emphasis>
<anchor xml:id="_store_8cpp_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classblock_mem___c_1a69d39ad66d8abfca22e21482b5cfe329">memManager</link>-&gt;<link linkend="_classstorage_block___c_1a85ff9c2e220fa0a8e7c1d62f85a3cf39">readSlot</link>(&#32;<emphasis role="keywordtype">id</emphasis>,&#32;slot,&#32;r&#32;);
<anchor xml:id="_store_8cpp_source_1l00187"/>00187 }
</programlisting></section>
