AutoGen Definitions dummy;
class = {
  cp-id     = 'classblockMem__C';
  cp-name   = 'blockMem_C';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a0ca4c16b7ab37bdd713f9af4c39c9246';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setId';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id1';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a7d2f47edbc0961e8b84a9763d1b53429';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getId';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a479845f6dc74b5d9a3abb29a7d69db7b';
        sec-mem-ref-line = '75';
        sec-mem-ref-name = 'id';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1aa8522e68abf7be7e054bcab0081c01e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setMemManager';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
storageBlock_C &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'o';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a6ac5c94d5e447ba91f9a92766651ffd4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockSize';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1ab118a805d45d5b6208fbd31dface7e39';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'storageBlock_C::blockSize';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1abad38b2746fc7a01c61c597877c2c6d5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'slotSize';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
mem for block = number of slots * slot size.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'storageBlock_C::blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a479845f6dc74b5d9a3abb29a7d69db7b';
        sec-mem-ref-line = '75';
        sec-mem-ref-name = 'id';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a553a53a98f4ef6f9b6f1f7b69d366214';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'readByte';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1aee7a456279f8d306be97defb37320c35';
        sec-mem-ref-line = '134';
        sec-mem-ref-name = 'storageBlock_C::readByte';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a22a8e8952d4df256c9ff7333824fc90f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'readSlot';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'r';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read a slot of data from storage. e.g. eeprom, flash, SDcard(only eeprom for now)
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param [in] slot  The slot to read. 0 for first slot.
@param [out] r  pointer to the memory to copy the slot into. As not using templates need to make sure sizeof(var pointed to by r) >= slot size.

@return true true if no problems
@return false 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1a85ff9c2e220fa0a8e7c1d62f85a3cf39';
        sec-mem-ref-line = '152';
        sec-mem-ref-name = 'storageBlock_C::readSlot';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a384e3788e132d1ba9fac1b8c93fab642';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'writeByte';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1abef785fcb0da67f1ca8dbf54cfc6491f';
        sec-mem-ref-line = '196';
        sec-mem-ref-name = 'storageBlock_C::writeByte';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1ae8b068f64f2b0dc1c74a278fd8f6b954';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'writeSlot';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'r';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1a7e258c73d18c8939ab2fcab66fcf6a64';
        sec-mem-ref-line = '185';
        sec-mem-ref-name = 'storageBlock_C::writeSlot';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a9230be465ff59edbed66fe536b3df2be';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'print';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1a5689bada4bede0c81ab36fe2f06cc9f0';
        sec-mem-ref-line = '70';
        sec-mem-ref-name = 'storageBlock_C::print';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1ab00c3bdc52c49a26f8b6931f9af058ab';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getSlots';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1acb749fa733b7000304b57fb659716497';
        sec-mem-ref-line = '58';
        sec-mem-ref-name = 'storageBlock_C::getSlots';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockStart';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1ad1486b9a48a2b2c4cb3cf16827cbb7a1';
        sec-mem-ref-line = '122';
        sec-mem-ref-name = 'storageBlock_C::blockStart';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classblockMem__C_1a60818204acd6616f5513548b18b49a98';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockEnd';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1a2467b7e6f601f96efc42a6c32a023522';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'storageBlock_C::blockEnd';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a69d39ad66d8abfca22e21482b5cfe329';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'memManager';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classblockMem__C_1a479845f6dc74b5d9a3abb29a7d69db7b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'id';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a7d2f47edbc0961e8b84a9763d1b53429';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'getId';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1abad38b2746fc7a01c61c597877c2c6d5';
        sec-mem-ref-line = '84';
        sec-mem-ref-name = 'slotSize';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classblockMem__C_1a69d39ad66d8abfca22e21482b5cfe329';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
storageBlock_C *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'memManager';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a60818204acd6616f5513548b18b49a98';
        sec-mem-ref-line = '78';
        sec-mem-ref-name = 'blockEnd';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a6ac5c94d5e447ba91f9a92766651ffd4';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'blockSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'blockStart';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1ab00c3bdc52c49a26f8b6931f9af058ab';
        sec-mem-ref-line = '90';
        sec-mem-ref-name = 'getSlots';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a9230be465ff59edbed66fe536b3df2be';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'print';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a553a53a98f4ef6f9b6f1f7b69d366214';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'readByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a22a8e8952d4df256c9ff7333824fc90f';
        sec-mem-ref-line = '216';
        sec-mem-ref-name = 'readSlot';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1aa8522e68abf7be7e054bcab0081c01e6';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'setMemManager';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1abad38b2746fc7a01c61c597877c2c6d5';
        sec-mem-ref-line = '84';
        sec-mem-ref-name = 'slotSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a384e3788e132d1ba9fac1b8c93fab642';
        sec-mem-ref-line = '87';
        sec-mem-ref-name = 'writeByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1ae8b068f64f2b0dc1c74a278fd8f6b954';
        sec-mem-ref-line = '88';
        sec-mem-ref-name = 'writeSlot';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
  cp-fileline  = '73';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Wrapper for storageBlock_C but working with only 1 block id(eg all the 1wire chips saved info).
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 This works with a block of storage consisting of getSlots() slots all of the
same size. e.g if we need to store 15 arrays of bytes each 7 bytes long.
i.e. Equivelent to: byte arrayOfType[getSlots()=15][7];
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 1;
        node-label = 'blockMem_C';
        node-link = {
          node-link-id = 'classblockMem__C';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-id
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-memManager
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'byte';
      }; /* node */
      node = {
        node-id    = 3;
        node-label = 'storageBlock_C';
        node-link = {
          node-link-id = 'classstorageBlock__C';
        };
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-nextStartAddr
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-maxBlocks
-slotsUsed
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+blocksA
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'storageBlock_T';
        node-link = {
          node-link-id = 'store_8h#structstorageBlock__T';
        };
        node-child = {
          child-id = '6';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+start
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+size
+slots
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'uint16_t';
      }; /* node */
      node = {
        node-id    = 6;
        node-label = 'word';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classstorageBlock__C';
  cp-name   = 'storageBlock_C';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a9020da58b3765ed6bd53da41c55b9eb7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'storageBlock_C';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'maxBlocks';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
storageBlock_T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'a';
        sec-mem-param-array = '[]';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'startIndex';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Pointer to an array used to store each slots details in.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Construct a new storageBlock class object.

@param maxBlocks size of the array a[] in elements(not bytes).
@param a Pointer to an array to store the storage block info in.
@param startIndex index to start using the storage media at. eg. with eeprom, use 15 to skip the first 15 bytes of memory.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1ab6449bda89cd0dab792e60e5ee862939';
        sec-mem-ref-line = '41';
        sec-mem-ref-name = 'maxBlocks';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a8534147de81cd1c257a0ec727440213c';
        sec-mem-ref-line = '40';
        sec-mem-ref-name = 'nextStartAddr';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1afe17040108c5d920b01d871585c150f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~storageBlock_C';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a0f4aa42b1755c6439528a6a6f72043f8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'leaveFirst';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the address to start using storage at.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param i The storage index/ memory address.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a8534147de81cd1c257a0ec727440213c';
        sec-mem-ref-line = '40';
        sec-mem-ref-name = 'nextStartAddr';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1ac9ae09aee8e89280fd15dcae118a7783';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'addBlock';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slots';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'recSize';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Add a storage block.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
No range checking

@param slots number of slots to add
@param recSize size of each block in bytes.
@return byte returns the id of the block.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a8534147de81cd1c257a0ec727440213c';
        sec-mem-ref-line = '40';
        sec-mem-ref-name = 'nextStartAddr';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a91392f39b00b69c871dcfbd57095b643';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'storageBlock_T::slots';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1af11fee6180446c962384ebe4c5d8eb11';
        sec-mem-ref-line = '42';
        sec-mem-ref-name = 'slotsUsed';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1ab118a805d45d5b6208fbd31dface7e39';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockSize';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
get the storage space size in bytes reserved for the block.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param id The block id/array index.
@return byte block size in bytes.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a91392f39b00b69c871dcfbd57095b643';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'storageBlock_T::slots';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a6ac5c94d5e447ba91f9a92766651ffd4';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'blockMem_C::blockSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a5689bada4bede0c81ab36fe2f06cc9f0';
        sec-mem-ref-line = '70';
        sec-mem-ref-name = 'print';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1ad1486b9a48a2b2c4cb3cf16827cbb7a1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
word
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockStart';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'blockId';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the storage block start address.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param blockId Block id/array index
@return word 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1ae2966e00bdc0b6ac8b5e7fb9eefd0cf2';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'blockMem_C::blockStart';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a2467b7e6f601f96efc42a6c32a023522';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
word
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blockEnd';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
get block end index. i.e. the address of last byte used by the block.
If block size is 0 there isn't a block end so result will be meaningless.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param id Block id, index into blocksA[]
@return byte
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a91392f39b00b69c871dcfbd57095b643';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'storageBlock_T::slots';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a60818204acd6616f5513548b18b49a98';
        sec-mem-ref-line = '78';
        sec-mem-ref-name = 'blockMem_C::blockEnd';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a5689bada4bede0c81ab36fe2f06cc9f0';
        sec-mem-ref-line = '70';
        sec-mem-ref-name = 'print';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1acb749fa733b7000304b57fb659716497';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getSlots';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a91392f39b00b69c871dcfbd57095b643';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'storageBlock_T::slots';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1ab00c3bdc52c49a26f8b6931f9af058ab';
        sec-mem-ref-line = '90';
        sec-mem-ref-name = 'blockMem_C::getSlots';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1aee7a456279f8d306be97defb37320c35';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'readByte';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'blockId';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read a byte of data from a storage block slot.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param blockId the index the into the array holding the block info ie. (blocksA[blockId]).
@param slot The slot number.
@param offset The byte to read withing the slot starting at 0 for the first.
@return byte 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a553a53a98f4ef6f9b6f1f7b69d366214';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'blockMem_C::readByte';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a85ff9c2e220fa0a8e7c1d62f85a3cf39';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'readSlot';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'blockId';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'r';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '60';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Read a var from permanent storage eg. EEPROM into a var/struct, copys mem of size = to the slot size given when addBlock was called.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param [in] blockId the block of storage, ie. the index to the array
@param [in] slot The slot to read, First slot is 0.
@param [out] r pointer to the memory to copy the slot into. As not using templates need to make sure sizeof(var pointed to by r) >= slot size.
@return true if no problems
@return false if slot > num of slots in block.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a22a8e8952d4df256c9ff7333824fc90f';
        sec-mem-ref-line = '216';
        sec-mem-ref-name = 'blockMem_C::readSlot';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1abef785fcb0da67f1ca8dbf54cfc6491f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'writeByte';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'blockId';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'offset';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '61';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a384e3788e132d1ba9fac1b8c93fab642';
        sec-mem-ref-line = '87';
        sec-mem-ref-name = 'blockMem_C::writeByte';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a7e258c73d18c8939ab2fcab66fcf6a64';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'writeSlot';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'blockId';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'slot';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'r';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Write a var into permanent storage eg. EEPROM into a var/struct, copys mem of size = to the slot size given when addBlock was called.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param [in] blockId the block of storage, ie. the index to the array
@param [in] slot The slot to update, mem copy len is = the size of the rec/slot
@param [out] r pointer to the memory to copy into the slot. As not using templates need to make sure sizeof(var pointed to by r) >= slot size.
@return true if no problems
@return false if slot > num of slots in block.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'storageBlock_T::size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'storageBlock_T::start';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1ae8b068f64f2b0dc1c74a278fd8f6b954';
        sec-mem-ref-line = '88';
        sec-mem-ref-name = 'blockMem_C::writeSlot';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a5689bada4bede0c81ab36fe2f06cc9f0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'print';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '64';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
print info about the storage block to the serial.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param id the id(array index) of the block to print the info about.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1a2467b7e6f601f96efc42a6c32a023522';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'blockEnd';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8cpp_1ab118a805d45d5b6208fbd31dface7e39';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'blockSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1a9230be465ff59edbed66fe536b3df2be';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'blockMem_C::print';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classstorageBlock__C_1a769366c10cb4f7a77f9098bca7be6256';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'printMemUsage';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a9069a91d9228649e3d3f67b5f40e182a';
        sec-mem-ref-line = '44';
        sec-mem-ref-name = 'blocksA';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'store_8h_1a8534147de81cd1c257a0ec727440213c';
        sec-mem-ref-line = '40';
        sec-mem-ref-name = 'nextStartAddr';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classstorageBlock__C_1a9069a91d9228649e3d3f67b5f40e182a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
storageBlock_T *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'blocksA';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
No. of elements of blocksA[] used.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ac9ae09aee8e89280fd15dcae118a7783';
        sec-mem-ref-line = '107';
        sec-mem-ref-name = 'addBlock';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a2467b7e6f601f96efc42a6c32a023522';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'blockEnd';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ab118a805d45d5b6208fbd31dface7e39';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'blockSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ad1486b9a48a2b2c4cb3cf16827cbb7a1';
        sec-mem-ref-line = '122';
        sec-mem-ref-name = 'blockStart';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1acb749fa733b7000304b57fb659716497';
        sec-mem-ref-line = '58';
        sec-mem-ref-name = 'getSlots';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a5689bada4bede0c81ab36fe2f06cc9f0';
        sec-mem-ref-line = '70';
        sec-mem-ref-name = 'print';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a769366c10cb4f7a77f9098bca7be6256';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'printMemUsage';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1aee7a456279f8d306be97defb37320c35';
        sec-mem-ref-line = '134';
        sec-mem-ref-name = 'readByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a85ff9c2e220fa0a8e7c1d62f85a3cf39';
        sec-mem-ref-line = '152';
        sec-mem-ref-name = 'readSlot';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1abad38b2746fc7a01c61c597877c2c6d5';
        sec-mem-ref-line = '84';
        sec-mem-ref-name = 'blockMem_C::slotSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a9020da58b3765ed6bd53da41c55b9eb7';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'storageBlock_C';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1abef785fcb0da67f1ca8dbf54cfc6491f';
        sec-mem-ref-line = '196';
        sec-mem-ref-name = 'writeByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a7e258c73d18c8939ab2fcab66fcf6a64';
        sec-mem-ref-line = '185';
        sec-mem-ref-name = 'writeSlot';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classstorageBlock__C_1a8534147de81cd1c257a0ec727440213c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
uint16_t
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'nextStartAddr';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ac9ae09aee8e89280fd15dcae118a7783';
        sec-mem-ref-line = '107';
        sec-mem-ref-name = 'addBlock';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a0f4aa42b1755c6439528a6a6f72043f8';
        sec-mem-ref-line = '61';
        sec-mem-ref-name = 'leaveFirst';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a769366c10cb4f7a77f9098bca7be6256';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'printMemUsage';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a9020da58b3765ed6bd53da41c55b9eb7';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'storageBlock_C';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classstorageBlock__C_1ab6449bda89cd0dab792e60e5ee862939';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'maxBlocks';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The address/index to start at for any new block.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a9020da58b3765ed6bd53da41c55b9eb7';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'storageBlock_C';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classstorageBlock__C_1af11fee6180446c962384ebe4c5d8eb11';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'slotsUsed';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The max No. Blocks. The number of array elements in the array used to store the block info in (blocksA).
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ac9ae09aee8e89280fd15dcae118a7783';
        sec-mem-ref-line = '107';
        sec-mem-ref-name = 'addBlock';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
  cp-fileline  = '38';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Blocks of storage. eg. 1 block for 1wire chips and another for room data. each of different lengths
with different ids.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Each blocks info if stored in a extern array.
@param maxBlocks The size of the array.
@param a a pointer to an extern array used to store the storage info.
@param startIndex for example with eeprom it could be 15 to stat using the eeprom at address 15;
_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'byte';
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'storageBlock_C';
        node-link = {
          node-link-id = 'classstorageBlock__C';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-nextStartAddr
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-maxBlocks
-slotsUsed
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '4';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+blocksA
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 4;
        node-label = 'storageBlock_T';
        node-link = {
          node-link-id = 'store_8h#structstorageBlock__T';
        };
        node-child = {
          child-id = '5';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+start
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+size
+slots
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'uint16_t';
      }; /* node */
      node = {
        node-id    = 5;
        node-label = 'word';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'store_8h';
  cp-name   = 'storageBlock_T';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'store_8h_1a140e81ed333b945f2430230e7da23f45';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
word
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '25';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ac9ae09aee8e89280fd15dcae118a7783';
        sec-mem-ref-line = '107';
        sec-mem-ref-name = 'storageBlock_C::addBlock';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a2467b7e6f601f96efc42a6c32a023522';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'storageBlock_C::blockEnd';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ad1486b9a48a2b2c4cb3cf16827cbb7a1';
        sec-mem-ref-line = '122';
        sec-mem-ref-name = 'storageBlock_C::blockStart';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1aee7a456279f8d306be97defb37320c35';
        sec-mem-ref-line = '134';
        sec-mem-ref-name = 'storageBlock_C::readByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a85ff9c2e220fa0a8e7c1d62f85a3cf39';
        sec-mem-ref-line = '152';
        sec-mem-ref-name = 'storageBlock_C::readSlot';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1abef785fcb0da67f1ca8dbf54cfc6491f';
        sec-mem-ref-line = '196';
        sec-mem-ref-name = 'storageBlock_C::writeByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a7e258c73d18c8939ab2fcab66fcf6a64';
        sec-mem-ref-line = '185';
        sec-mem-ref-name = 'storageBlock_C::writeSlot';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'store_8h_1a91392f39b00b69c871dcfbd57095b643';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'slots';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '26';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
EEprom start index.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Number of records to save space for in EEPROM for.
_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ac9ae09aee8e89280fd15dcae118a7783';
        sec-mem-ref-line = '107';
        sec-mem-ref-name = 'storageBlock_C::addBlock';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a2467b7e6f601f96efc42a6c32a023522';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'storageBlock_C::blockEnd';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ab118a805d45d5b6208fbd31dface7e39';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'storageBlock_C::blockSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1acb749fa733b7000304b57fb659716497';
        sec-mem-ref-line = '58';
        sec-mem-ref-name = 'storageBlock_C::getSlots';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'store_8h_1a4c0d47a86eb54a54bdc30f23b0d648fc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size';
      sec-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
sizeof each storage slot in bytes.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ac9ae09aee8e89280fd15dcae118a7783';
        sec-mem-ref-line = '107';
        sec-mem-ref-name = 'storageBlock_C::addBlock';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a2467b7e6f601f96efc42a6c32a023522';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'storageBlock_C::blockEnd';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1ab118a805d45d5b6208fbd31dface7e39';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'storageBlock_C::blockSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1aee7a456279f8d306be97defb37320c35';
        sec-mem-ref-line = '134';
        sec-mem-ref-name = 'storageBlock_C::readByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a85ff9c2e220fa0a8e7c1d62f85a3cf39';
        sec-mem-ref-line = '152';
        sec-mem-ref-name = 'storageBlock_C::readSlot';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8h_1abad38b2746fc7a01c61c597877c2c6d5';
        sec-mem-ref-line = '84';
        sec-mem-ref-name = 'blockMem_C::slotSize';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1abef785fcb0da67f1ca8dbf54cfc6491f';
        sec-mem-ref-line = '196';
        sec-mem-ref-name = 'storageBlock_C::writeByte';
    };
      sec-mem-referencedby = {
        sec-mem-ref-id = 'store_8cpp_1a7e258c73d18c8939ab2fcab66fcf6a64';
        sec-mem-ref-line = '185';
        sec-mem-ref-name = 'storageBlock_C::writeSlot';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
  cp-fileline  = '24';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Storage block TYPE info.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'byte';
      }; /* node */
      node = {
        node-id    = 1;
        node-label = 'storageBlock_T';
        node-link = {
          node-link-id = 'store_8h#structstorageBlock__T';
        };
        node-child = {
          child-id = '2';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+start
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '3';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+size
+slots
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'word';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* struct */
file = {
  file-id   = 'README_8md';
  file-name = 'README.md';
  file-full-name  = '/home/jmnc2/doc/src/Arduino/libraries/store/README.md';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'store_8cpp';
  file-name = 'store.cpp';
  file-full-name  = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'store_8h';
  file-name = 'store.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'store_8h_1a0eee8221fc0e018111a612d1c2a28523';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sBlocks';
      define-mem-param  = {
        define-mem-def-name = 'S';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
static storageBlock_T storageBlocksA[S]; maxStorageBlocks = S;
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
      define-mem-desc-line = '96';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/home/jmnc2/doc/src/Arduino/libraries/store/src/store.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_
To help with very simple data saving between MCU resets. For now only using inbuilt EEPROM.
_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_
@author Joseph (you@domain.com)
@version v0.0.2
@date 2021-12-28

@copyright Copyright (c) 2021

@author Joseph (you@domain.com)
@version v0.0.2
@date 2021-12-28

@copyright Copyright (c) 2022

At least for now:
1: a function to call to request a block of storage.
2: This unit should keep track of how much space is used and start index of each block.
_EnD_oF_dEf_TeXt_;
}; /* file */
